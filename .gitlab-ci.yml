stages:
  - setup
  - build
  - package
  - deploy

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/todo:v$CI_PIPELINE_ID
  NAME_SPACE: "default"

setup:
  stage: setup
  script:
    - echo $CI_JOB_STAGE
    - echo $IMAGE_NAME
    #- env

maven_build:
  stage: build
  image: maven:3.8.3-jdk-11-slim
  script:
    - echo $CI_JOB_STAGE
    - mvn clean package
    #- ls -lah
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .m2/repository
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1 week

docker_build:
  stage: package
  image: docker:stable
  services:
    - docker:dind
  script:
    - echo $CI_JOB_STAGE
    #- echo $CI_REGISTRY
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY # user "gitlab-ci-token" is automatically created by GitLab
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
    - docker rmi $IMAGE_NAME
    #- docker image prune -a -f
    - export temp=$(docker images -f dangling=true -q)
    - echo $temp
    - if [ $temp !="" ]; then docker rmi -f "$(docker images -f 'dangling=true' -q)"; else docker image prune -f; fi
  artifacts:
    paths:
      - manifests/k8s
    expire_in: 1 week

k8s_deploy:
  stage: deploy
  environment:
    name: production
    url: http://api.learnk8s.net:8080/
  image:
    name: grshin/kubectl:1.21.7
    #name: ccll/kubectl:1.19
    entrypoint: [""]
  before_script:
    - kubectl version
  script:
    - echo $CI_JOB_STAGE
    - kubectl get ns
    - kubectl config set-context --current --namespace=$NAME_SPACE
    #- kubectl config view --minify | grep namespace # Validate Namesapce
    #- kubectl config view
    - kubectl delete --ignore-not-found=true secret regcred
    - kubectl get secret regcred -n $NAME_SPACE || kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$DOCKER_TOKEN_ID --docker-password=$DOCKER_TOKEN_PASSWORD  -n $NAME_SPACE
    - kubectl apply -f ./manifests/k8s/01-todo-config.yml -n $NAME_SPACE
    - kubectl apply -f ./manifests/k8s/02-todo-mysql-local.yml -n $NAME_SPACE
    - envsubst < ./manifests/k8s/03-todo-deployment.yml | kubectl apply -n $NAME_SPACE -f -
    # - envsubst < ./manifests/k8s/03-todo-deployment.yml > ./manifests/k8s/03-todo-deployment_temp.yml
    # - cat ./manifests/k8s/03-todo-deployment_temp.yml
    - kubectl apply -f ./manifests/k8s/04-todo-service.yml -n $NAME_SPACE
